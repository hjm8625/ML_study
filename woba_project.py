# -*- coding: utf-8 -*-
"""wOBA_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PBShGaFH89CYhvp8ot1aN-jG8B8629py

# wOBA, Weighted On-Base Average, is a metric which is designed to measure hitter’s offensive productivity. Unlike on-base percentage, which treats all times on base equally, wOBA assigns run-value-based weights to each offensive situations. These weights are recalculated each season according to the league run environment. Let’s build a Linear regression model to estimate wOBA for 2024 using some simple statistics.
* the wOBA calculation = (unintentional BB factor x unintentional BB + HBP factor x HBP + 1B factor x 1B + 2B factor x 2B + 3B factor x 3B + HR factor x HR)/(AB + unintentional BB + SF + HBP)
* reference : baseballsavant

Date preprocessing
"""

# Import csv files - "pd.read_csv()"
import pandas as pd
df = pd.read_csv('2024stats.csv')
df.head()

# We need to replace columns with easy names
df.columns = ['Player','ID','Year','Age','AB','H','1B','2B','3B','HR','SO','BB','AVG','SLG','OBP','RBI','SB','wOBA','OAA','Sprint_Speed']
df.head(1)

# Let's take a look at the characteristics of this table
# There are 129 players who exceeded qualified PA in 2024, and 20 columns are selected.
print('The shape of DataFrame: ',df.shape)

# Let's find out the information of DataFrame
df.info()

# To do this, I need to select how to manage NULL(OAA)
# My goal is predicting wOBA, so I will drop OAA column because it is related with defense.
df.drop('OAA',axis=1,inplace=True)

# Also, I can use 'describe'
df.describe()

# Find some leaders of AVG, HR, wOBA  - padas prints row as Series, so I add values[0] to watch only name
print('2024 Batting Leader: ', df[df['AVG']==df['AVG'].max()]['Player'].values[0])
print('2024 Homerun Leader: ', df[df['HR']==df['HR'].max()]['Player'].values[0])
print('2024   wOBA  Leader: ', df[df['wOBA']==df['wOBA'].max()]['Player'].values[0])

# Find top 5 wOBA list - using sort_values
df.sort_values('wOBA',ascending = False).head(5)

# Mean of AVG,wOBA of qualified PA
round(df[['AVG','wOBA']].mean() ,3)

# Make new column - (OPS = SLG+OBP)
# Find top 5 OPS list
df['OPS'] = df['SLG']+df['OBP']
df.sort_values('OPS',ascending = False).head()

# Find corr with wOBA
df1=df[['Age','AB','H','1B','2B','3B','HR','SO','BB','AVG','SLG','OBP','RBI','SB','OPS','Sprint_Speed','wOBA']]
df1.corr()['wOBA']

# In this correlation analysis, I can see SLG,OBP,OPS(SLG+OBP) are strongly correlated with wOBA

# To predict wOBA, make train,test data set using model_selection/train_test_split
X=df[['Age','AB','H','1B','2B','3B','HR','SO','BB','AVG','SLG','OBP','RBI','SB','OPS']] # I don't need Sprint_Speed
y=df['wOBA']
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Using LinearRegression model - linear_model/LinearRegression
from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(X_train,y_train)

# In regression, there are 3 ways to show the accuracy - metrics/mean_squared_error,mean_absolute_error, r2
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

# Predicting wOBA of test set with the model
y_pred = model.predict(X_test)

# Compare predict value of test set(y_pred) with the real wOBA of test set(y_test)
mse = mean_squared_error(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("MSE : ",mse)
print("MAE : ",mae)
print("r2  : ",r2)

# It has quite good accuracy, but it could be overfitted because the amount of datasets are too small(129).
# Compare values
df['y_pred']=model.predict(X)
df[['Player','wOBA','y_pred']].sort_values('wOBA',ascending=False).head(10)

# Find coefficient and intercept
print('model.coefficient:', model.coef_)
print('model.intercept  :', model.intercept_)

"""#result:
It was found that the accuracy of model was very high because of the small size of the dataset and the strong correlation between wOBA and OPS(SLG+OBA). This project did not involve feature selection or preprocessing steps such as scaling, as the main focus was on building a simple model. Through this project, it was reaffirmed that wOBA effectively reflects the modern baseball emphasis on slugging and on-base.
"""